spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 2
      min-idle: 2
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 6000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      connection-properties: druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 配置监控统计拦截的filters
      filters: stat
      connection-init-sqls: set names utf8mb4;
      # 配置多数据源
      master:
        url: jdbc:mysql://127.0.0.1:3306/spring_cache1
        username: root
        password: admin
      slave:
        url: jdbc:mysql://127.0.0.1:3306/spring_cache
        username: root
        password: admin


  cache:
    redis:
      use-key-prefix: true # 是否配置前缀
      time-to-live: 1d # 缓存时间
      port: 6379
      host: localhost
      database: 0
      timeout: 1s
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms


  # 开启驼峰命名匹配
mybatis:
  configuration:
   map-underscore-to-camel-case: true

server:
  port: 80

logging:
  level:
   com.xsm.cache.mapper: debug

debug: false

#spring.redis.host=localhost

